apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  labels:
    app: nginx-ingress-controller
  namespace: development
spec:
  selector:
    matchLabels:
      app: nginx-ingress-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-ingress-controller
    spec:
      # hostNetwork makes it possible to use ipv6 and to preserve the source 
      # IP correctly regardless of docker configuration.
      # However, it is not a hard dependency of the nginx-ingress-controller
      # itself, and it may cause issues if port 10254 already is taken on 
      # the host.
      # Since hostPort is currently broken on CNI 
      # (https://github.com/kubernetes/kubernetes/issues/31307), we have to
      # use hostNetwork where CNI is used, like with kubeadm.
      # hostNetwork: true
      terminationGracePeriodSeconds: 60
      serviceAccountName: nginx-ingress-serviceaccount
      containers:
      - image: registry.k8s.io/ingress-nginx/controller:v1.7.1@sha256:7244b95ea47bddcb8267c1e625fb163fc183ef55448855e3ac52a7b260a60407
        name: nginx-ingress-controller
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        args:
        - /nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
        - --update-status=false
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-controller
  namespace: development
  labels:
    app: nginx-ingress-controller
spec:
  type: LoadBalancer
  ports:
  - port: 80
    nodePort: 30021
    name: http
  - port: 443
    nodePort: 30022
    name: https
  selector:
    app: nginx-ingress-controller
